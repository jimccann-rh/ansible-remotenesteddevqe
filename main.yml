---

- hosts: remotedevqe
  #connection: local
  become: false
  gather_facts: false

  tasks:
    - block:
       - name: Add host to group esxi 
         ansible.builtin.add_host:
           name: '{{ item }}'
           groups: esxi
         loop: "{{ target_hosts.split('\n') | list }}"
   
       - name: Add host to group vc
         ansible.builtin.add_host:
           name: '{{ item }}'
           groups: vc
         loop: "{{ target_vcs.split('\n') | list }}"
      rescue:
       - name: Add host to group esxi
         ansible.builtin.add_host:
           name: '{{ item }}'
           groups: esxi
         loop: "{{ target_hosts | list }}"
       
       - name: Add host to group vc
         ansible.builtin.add_host:
           name: '{{ item }}'
           groups: vc
         loop: "{{ target_vcs | list }}"


  tags:
    - always

- name: create nested VM's
  hosts: remotedevqe
  #connection: local
  gather_facts: true
  vars:
    templocation: "{{ ansible_env.HOME }}/build"
    mountpath: '/data/export/share'
    version: "7"
    esximemory: "131072"
    esxicpu: "20"
    testingesxi: false    
    testingvc: false
#    howmanydays: 1
#    tempenviro: true 
#    createcron: false
#    cleanupcron: false

  collections:
    - community.general
    - community.vmware

  module_defaults:
    group/vmware:
      hostname: "{{ vc_hostname }}"
      username: "{{ vc_username }}"
      password: "{{ vc_password }}"
      validate_certs: false

  tasks:

#    - block:
#       - name: Set cron 
#         include_tasks: cronjob.yml
##      when: tempenviro | bool

#    - pause:
#        seconds: 30


    - name: Gather cluster info from given datacenter
      community.vmware.vmware_cluster_info:
        cluster_name: "{{ vc_cluster }}"
      register: cluster_info


#    - debug:
#        msg: "{{ cluster_info['clusters'][vc_cluster]['resource_summary'] }}"

    - name: over usage
      set_fact: 
        cpuover: "{{ cluster_info['clusters'][vc_cluster]['resource_summary']['cpuCapacityMHz'] - 100000 }}"
        memover: "{{ cluster_info['clusters'][vc_cluster]['resource_summary']['memCapacityMB'] - 100000 }}"
        dskover: "{{ cluster_info['clusters'][vc_cluster]['resource_summary']['storageCapacityMB'] - 100000 }}"

    - debug:
        msg: 
          - "{{ cluster_info['clusters'][vc_cluster]['resource_summary'] }}"
          - "{{ cpuover }}"
          - "{{ memover }}"
          - "{{ dskover }}"

    - name: Check CPU usage
      fail:
        msg: "CPU usage is too high in cluster REMOVE RESOURCES"
      when: cluster_info['clusters'][vc_cluster]['resource_summary']['cpuUsedMHz'] > 650000
#      when: cluster_info['clusters'][vc_cluster]['resource_summary']['memUsedMB'] > 650000


    - name: Check resource usage
      loop: "{{ cluster_info['clusters'][vc_cluster]['resource_summary'].items() }}"
      loop_control:
        index_var: resource_name
        loop_var: resource_value
      fail:
      when: 
        - resource_name == "cpuUsedMHz" and resource_value < cpuover
        - resource_name == "memUsedMB" and resource_value < memover
        - resource_name == "storageUsedMB" and resource_value < dskover



#    - name: Check resource usage
#      loop: "{{ cluster_info['clusters'][vc_cluster]['resource_summary'].items() }}"
#      loop_control:
#        index_var: resource_name
#        loop_var: resource_value
#      tasks:
#        - name: Check CPU usage
#          fail:
#            msg: "CPU usage is too high in cluster REMOVE RESOURCES"
#          when: resource_name == "cpuUsedMHz" and resource_value > 650000
#        - name: Check memory usage
#          fail:
#            msg: "Memory usage is too high in cluster REMOVE RESOURCES"
#          when: resource_name == "memUsedMB" and resource_value > 650000

    - block:
       - name: Needed packages on system
         include_tasks: packlocal.yml
      tags:
        - packlocal
        - never

    - block:
       - name: Include vars of vcenter_host-7.yml
         ansible.builtin.include_vars:
           file: vcenter_host-7.yml

      when: '"7" in version'

    - block:
       - name: Include vars of vcenter_host-8.yml
         ansible.builtin.include_vars:
           file: vcenter_host-8.yml

      when: '"8" in version'

    - block:
       - name: Deploy ova of ESXi
         include_tasks: esxinested.yml
         loop: "{{ groups['esxi'] | list }}"
         loop_control:
           loop_var: loop_bms
           index_var: my_idx
      tags:
        - esxinested

    - block:
       - name:  Deploy ova of VC
         include_tasks: vcnested.yml
         loop: "{{ groups['vc'] | list }}"
         loop_control:
           loop_var: loop_bms_vc
           index_var: my_idx_vc
      tags:
        - vcnested

- hosts: remotedevqe
  #connection: local
  name: ESXi add vcenter
  gather_facts: False
  serial: 1
  vars:
    bootstrap: true
    nfsetup: true
    nfsiso: false
    localcy: false

  tags:
    - hostvcenter

  collections:
    - community.general
    - community.vmware

  tasks:

    - block:
       - name: Add host to vcenter
         include_tasks: addhosts_vcenter.yml
         loop: "{{ groups['esxi'] | list }}"
         loop_control:
           loop_var: loop_bms
           index_var: my_idx

       - name: Add dvs to vcenter and add host to dvs
         include_tasks: dvs_hosts_vcenter.yml
         #when: '"1" in DC | string'
         loop: "{{ groups['esxi'] | list }}"
         loop_control:
           loop_var: loop_bms
           index_var: my_idx

      tags:
       - vcenterhost

- name: REMOVE nested VM's
  hosts: remotedevqe
  #connection: local
  gather_facts: true
  vars:
    removevsphere: false
    createcron: false
    cleanupcron: false
    showinfo: true
    howmanydays: 1
#    tempenviro: true 

  collections:
    - community.general
    - community.vmware

  module_defaults:
    group/vmware:
      hostname: "{{ vc_hostname }}"
      username: "{{ vc_username }}"
      password: "{{ vc_password }}"
      validate_certs: false

  tasks:

    - name: Remove vSphere environment
      include_tasks: vsphere_remove.yml
      loop: "{{ groups['esxi'] | list }}"
      loop_control:
        loop_var: loop_bms
        index_var: my_idx
      vars:
        host_fact_name: "{{ hostvars[groups['esxi'][my_idx]].inventory_hostname }}"

    - name:  Remove VC
      include_tasks: vsphere_remove.yml
      loop: "{{ groups['vc'] | list }}"
      loop_control:
        loop_var: loop_bms
        index_var: my_idx
      vars:
        host_fact_name: "{{ hostvars[groups['vc'][my_idx]].inventory_hostname }}"

    - block:
       - name: Set cron
         include_tasks: cronjob.yml
#      when: tempenviro | bool
    - block:

       - debug:
           msg: "***** {{ host_fact_name }} VCENTER IP ADDRESS *****"
           #msg: "***** {{ host_fact_name }} VCENTER IP ADDRESS ***** password is ***** {{ vc_fact_password }} *****"
         loop: "{{ groups['vc'] | list }}"
         loop_control:
           loop_var: loop_bms
           index_var: my_idx
         vars:
           host_fact_name: "{{ hostvars[groups['vc'][my_idx]]['NESTEDVMIP'] }}"
      when: showinfo | bool and not cleanupcron | bool

  tags:
    - removevsphere
